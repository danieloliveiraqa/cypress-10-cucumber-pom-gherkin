"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const fs_1 = __importDefault(require("fs"));
const path_1 = __importDefault(require("path"));
const util_1 = __importDefault(require("util"));
const assert_1 = __importDefault(require("assert"));
const cypress_post10_configuration_1 = require("./cypress-post10-configuration");
let ithExample = 1;
function example(method, options, attribute, expected) {
    it(`should return ${attribute} = "${expected}" for ${util_1.default.inspect(options)}}`, () => {
        const { cypressConfig = "module.exports = {};", cypressConfigPath = "cypress.config.js", cypressEnvConfig, cypressProjectPath, } = options;
        const cwd = path_1.default.join(process.cwd(), "tmp", "unit", String(ithExample++));
        const fullCypressProjectPath = cypressProjectPath
            ? path_1.default.join(cwd, cypressProjectPath)
            : cwd;
        fs_1.default.rmSync(cwd, { recursive: true, force: true });
        fs_1.default.mkdirSync(fullCypressProjectPath, { recursive: true });
        fs_1.default.writeFileSync(path_1.default.join(fullCypressProjectPath, cypressConfigPath), cypressConfig);
        if (cypressEnvConfig) {
            fs_1.default.writeFileSync(path_1.default.join(fullCypressProjectPath, "cypress.env.json"), JSON.stringify(cypressEnvConfig, null, 2));
        }
        const actual = method(Object.assign({ argv: [], env: {}, cwd }, options));
        assert_1.default.strictEqual(actual[attribute], expected);
    });
}
describe("resolvePost10Configuration()", () => {
    // Default
    example(cypress_post10_configuration_1.resolvePost10Configuration, {}, "specPattern", "cypress/e2e/**/*.cy.{js,jsx,ts,tsx}");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {}, "excludeSpecPattern", "*.hot-update.js");
    // Simple CLI override
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config", "specPattern=foo/bar"],
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config=specPattern=foo/bar"],
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["-c", "specPattern=foo/bar"],
    }, "specPattern", "foo/bar");
    // CLI override with preceding, comma-delimited configuration
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config", "foo=bar,specPattern=foo/bar"],
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config=foo=bar,specPattern=foo/bar"],
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["-c", "foo=bar,specPattern=foo/bar"],
    }, "specPattern", "foo/bar");
    // CLI override with succeeding, comma-delimited configuration
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config", "specPattern=foo/bar,foo=bar"],
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config=specPattern=foo/bar,foo=bar"],
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["-c", "specPattern=foo/bar,foo=bar"],
    }, "specPattern", "foo/bar");
    // CLI override with last match taking precedence
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config", "specPattern=baz", "--config", "specPattern=foo/bar"],
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config=specPattern=baz", "--config=specPattern=foo/bar"],
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["-c", "specPattern=baz", "-c", "specPattern=foo/bar"],
    }, "specPattern", "foo/bar");
    const envTestMatrix = [
        {
            env: {
                CYPRESS_specPattern: "foo/bar",
            },
            expected: "foo/bar",
        },
        {
            env: {
                cypress_specPattern: "foo/bar",
            },
            expected: "foo/bar",
        },
        {
            env: {
                CYPRESS_spec_pattern: "foo/bar",
            },
            expected: "foo/bar",
        },
        {
            env: {
                cypress_spec_pattern: "foo/bar",
            },
            expected: "foo/bar",
        },
        {
            env: {
                CYPRESS_SPEC_PATTERN: "foo/bar",
            },
            expected: "foo/bar",
        },
        {
            env: {
                cypress_SPEC_PATTERN: "foo/bar",
            },
            expected: "foo/bar",
        },
        // Erroneous camelcase
        {
            env: {
                CYPRESS_specpattern: "foo/bar",
            },
            expected: "cypress/e2e/**/*.cy.{js,jsx,ts,tsx}",
        },
        {
            env: {
                cypress_specpattern: "foo/bar",
            },
            expected: "cypress/e2e/**/*.cy.{js,jsx,ts,tsx}",
        },
    ];
    for (let { env, expected } of envTestMatrix) {
        example(cypress_post10_configuration_1.resolvePost10Configuration, {
            env,
        }, "specPattern", expected);
    }
    describe("safe parsing", () => {
        // Override with cypress.config.js
        example(cypress_post10_configuration_1.resolvePost10Configuration, {
            cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
        }, "specPattern", "foo/bar");
        // Override with cypress.config.cjs
        example(cypress_post10_configuration_1.resolvePost10Configuration, {
            argv: ["--config-file", "cypress.config.cjs"],
            cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
            cypressConfigPath: "cypress.config.cjs",
        }, "specPattern", "foo/bar");
        // Override with cypress.config.mjs
        example(cypress_post10_configuration_1.resolvePost10Configuration, {
            argv: ["--config-file", "cypress.config.mjs"],
            cypressConfig: "export default { e2e: { specPattern: 'foo/bar' } };",
            cypressConfigPath: "cypress.config.mjs",
        }, "specPattern", "foo/bar");
        // Override with cypress.config.ts
        example(cypress_post10_configuration_1.resolvePost10Configuration, {
            argv: ["--config-file", "cypress.config.ts"],
            cypressConfig: "declare const foo: string;\nexport default { e2e: { specPattern: 'foo/bar' } };",
            cypressConfigPath: "cypress.config.ts",
        }, "specPattern", "foo/bar");
    });
    describe("dangerous parsing", () => {
        // Override with cypress.config.js
        example(cypress_post10_configuration_1.resolvePost10Configuration, {
            cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
            parseDangerously: true,
        }, "specPattern", "foo/bar");
        // Override with cypress.config.cjs
        example(cypress_post10_configuration_1.resolvePost10Configuration, {
            argv: ["--config-file", "cypress.config.cjs"],
            cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
            cypressConfigPath: "cypress.config.cjs",
            parseDangerously: true,
        }, "specPattern", "foo/bar");
        // Override with cypress.config.mjs
        example(cypress_post10_configuration_1.resolvePost10Configuration, {
            argv: ["--config-file", "cypress.config.mjs"],
            cypressConfig: "export default { e2e: { specPattern: 'foo/bar' } };",
            cypressConfigPath: "cypress.config.mjs",
            parseDangerously: true,
        }, "specPattern", "foo/bar");
        // Override with cypress.config.ts
        example(cypress_post10_configuration_1.resolvePost10Configuration, {
            argv: ["--config-file", "cypress.config.ts"],
            cypressConfig: "declare const foo: string;\nexport default { e2e: { specPattern: 'foo/bar' } };",
            cypressConfigPath: "cypress.config.ts",
            parseDangerously: true,
        }, "specPattern", "foo/bar");
    });
    // Override with cypress.config.js in custom location
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config-file", "foo.js"],
        cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
        cypressConfigPath: "foo.js",
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config-file=foo.js"],
        cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
        cypressConfigPath: "foo.js",
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["-C", "foo.js"],
        cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
        cypressConfigPath: "foo.js",
    }, "specPattern", "foo/bar");
    // Override with cypress.config.js & custom project path.
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--project", "foo"],
        cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
        cypressProjectPath: "foo",
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--project=foo"],
        cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
        cypressProjectPath: "foo",
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["-P", "foo"],
        cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
        cypressProjectPath: "foo",
    }, "specPattern", "foo/bar");
    // Override with cypress.config.js in custom location & custom project path.
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config-file", "foo.js", "--project", "foo"],
        cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
        cypressConfigPath: "foo.js",
        cypressProjectPath: "foo",
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["--config-file=foo.js", "--project", "foo"],
        cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
        cypressConfigPath: "foo.js",
        cypressProjectPath: "foo",
    }, "specPattern", "foo/bar");
    example(cypress_post10_configuration_1.resolvePost10Configuration, {
        argv: ["-C", "foo.js", "--project", "foo"],
        cypressConfig: "module.exports = { e2e: { specPattern: 'foo/bar' } };",
        cypressConfigPath: "foo.js",
        cypressProjectPath: "foo",
    }, "specPattern", "foo/bar");
});
