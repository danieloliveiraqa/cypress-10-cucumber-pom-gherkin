export declare function findLastIndex<T>(collection: ArrayLike<T>, predicate: (value: T) => boolean, beforeIndex?: number): number;
export declare function traverseArgvMatching(argv: string[], name: string, allowEqual: boolean): Generator<string, void, unknown>;
export declare function combine<T>(...generators: Generator<T, unknown, unknown>[]): Generator<T, void, unknown>;
export declare function findArgumentValue(argv: string[], name: string, allowEqual: boolean): string | undefined;
export declare function toSnakeCase(value: string): string;
export declare function capitalize(word: string): string;
export declare function toCamelCase(value: string): string;
export declare function resolveProjectPath(options: {
    argv: string[];
    cwd: string;
}): string;
