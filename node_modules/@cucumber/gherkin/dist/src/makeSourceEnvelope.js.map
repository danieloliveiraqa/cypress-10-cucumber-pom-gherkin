{"version":3,"file":"makeSourceEnvelope.js","sourceRoot":"","sources":["../../src/makeSourceEnvelope.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,6DAA8C;AAE9C,SAAwB,kBAAkB,CAAC,IAAY,EAAE,GAAW;IAClE,IAAI,SAAmC,CAAA;IACvC,IAAI,GAAG,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;QAC5B,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,6BAA6B,CAAA;KACnE;SAAM,IAAI,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE;QAC9B,SAAS,GAAG,QAAQ,CAAC,eAAe,CAAC,gCAAgC,CAAA;KACtE;IACD,IAAI,CAAC,SAAS;QAAE,MAAM,IAAI,KAAK,CAAC,YAAY,GAAG,iCAAiC,CAAC,CAAA;IACjF,OAAO;QACL,MAAM,EAAE;YACN,IAAI;YACJ,GAAG;YACH,SAAS;SACV;KACF,CAAA;AACH,CAAC;AAfD,qCAeC","sourcesContent":["import * as messages from '@cucumber/messages'\n\nexport default function makeSourceEnvelope(data: string, uri: string): messages.Envelope {\n  let mediaType: messages.SourceMediaType\n  if (uri.endsWith('.feature')) {\n    mediaType = messages.SourceMediaType.TEXT_X_CUCUMBER_GHERKIN_PLAIN\n  } else if (uri.endsWith('.md')) {\n    mediaType = messages.SourceMediaType.TEXT_X_CUCUMBER_GHERKIN_MARKDOWN\n  }\n  if (!mediaType) throw new Error(`The uri (${uri}) must end with .feature or .md`)\n  return {\n    source: {\n      data,\n      uri,\n      mediaType,\n    },\n  }\n}\n"]}