{"version":3,"file":"Errors.js","sourceRoot":"","sources":["../../src/Errors.ts"],"names":[],"mappings":";;;AAEA,MAAa,gBAAiB,SAAQ,KAAK;IAIzC,YAAY,OAAe;QACzB,KAAK,CAAC,OAAO,CAAC,CAAA;QAEd,MAAM,WAAW,GAAG,GAAG,CAAC,MAAM,CAAC,SAAS,CAAA;QAExC,gFAAgF;QAChF,IAAI,MAAM,CAAC,cAAc,EAAE;YACzB,MAAM,CAAC,cAAc,CAAC,IAAI,EAAE,WAAW,CAAC,CAAA;SACzC;aAAM;YACL,aAAa;YACb,IAAI,CAAC,SAAS,GAAG,WAAW,CAAA;SAC7B;IACH,CAAC;IAES,MAAM,CAAC,OAAO,CAAC,OAAe,EAAE,QAA4B;QACpE,MAAM,MAAM,GAAG,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QAC3D,MAAM,IAAI,GAAG,QAAQ,IAAI,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAA;QACvD,MAAM,CAAC,GAAG,IAAI,IAAI,IAAI,MAAM,MAAM,OAAO,EAAE,CAAA;QAC3C,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,CAAC,CAAC,CAAA;QACvB,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACvB,OAAO,GAAG,CAAA;IACZ,CAAC;CACF;AA1BD,4CA0BC;AAED,MAAa,eAAgB,SAAQ,gBAAgB;IAC5C,MAAM,CAAC,MAAM,CAAC,OAAe,EAAE,IAAY,EAAE,MAAc;QAChE,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,MAAM,MAAM,OAAO,EAAE,CAAC,CAAA;QACvD,GAAG,CAAC,QAAQ,GAAG,EAAE,IAAI,EAAE,MAAM,EAAE,CAAA;QAC/B,OAAO,GAAG,CAAA;IACZ,CAAC;CACF;AAND,0CAMC;AAED,MAAa,wBAAyB,SAAQ,gBAAgB;IACrD,MAAM,CAAC,MAAM,CAAC,MAAe;QAClC,MAAM,OAAO,GAAG,kBAAkB,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;QAC5E,MAAM,GAAG,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAA;QAC7B,GAAG,CAAC,MAAM,GAAG,MAAM,CAAA;QACnB,OAAO,GAAG,CAAA;IACZ,CAAC;CACF;AAPD,4DAOC;AAED,MAAa,mBAAoB,SAAQ,gBAAgB;IAChD,MAAM,CAAC,MAAM,CAAC,OAAe,EAAE,QAA2B;QAC/D,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAA;IACxC,CAAC;CACF;AAJD,kDAIC;AAED,MAAa,uBAAwB,SAAQ,gBAAgB;IACpD,MAAM,CAAC,MAAM,CAAC,QAAgB,EAAE,QAA4B;QACjE,MAAM,OAAO,GAAG,0BAA0B,GAAG,QAAQ,CAAA;QACrD,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAA;IACxC,CAAC;CACF;AALD,0DAKC","sourcesContent":["import * as messages from '@cucumber/messages'\n\nexport class GherkinException extends Error {\n  public errors: Error[]\n  public location: messages.Location\n\n  constructor(message: string) {\n    super(message)\n\n    const actualProto = new.target.prototype\n\n    // https://stackoverflow.com/questions/41102060/typescript-extending-error-class\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(this, actualProto)\n    } else {\n      // @ts-ignore\n      this.__proto__ = actualProto\n    }\n  }\n\n  protected static _create(message: string, location?: messages.Location) {\n    const column = location != null ? location.column || 0 : -1\n    const line = location != null ? location.line || 0 : -1\n    const m = `(${line}:${column}): ${message}`\n    const err = new this(m)\n    err.location = location\n    return err\n  }\n}\n\nexport class ParserException extends GherkinException {\n  public static create(message: string, line: number, column: number) {\n    const err = new this(`(${line}:${column}): ${message}`)\n    err.location = { line, column }\n    return err\n  }\n}\n\nexport class CompositeParserException extends GherkinException {\n  public static create(errors: Error[]) {\n    const message = 'Parser errors:\\n' + errors.map((e) => e.message).join('\\n')\n    const err = new this(message)\n    err.errors = errors\n    return err\n  }\n}\n\nexport class AstBuilderException extends GherkinException {\n  public static create(message: string, location: messages.Location) {\n    return this._create(message, location)\n  }\n}\n\nexport class NoSuchLanguageException extends GherkinException {\n  public static create(language: string, location?: messages.Location) {\n    const message = 'Language not supported: ' + language\n    return this._create(message, location)\n  }\n}\n"]}