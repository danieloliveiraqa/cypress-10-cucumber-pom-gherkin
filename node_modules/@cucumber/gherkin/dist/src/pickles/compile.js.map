{"version":3,"file":"compile.js","sourceRoot":"","sources":["../../../src/pickles/compile.ts"],"names":[],"mappings":"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","sourcesContent":["import * as messages from '@cucumber/messages'\nimport IGherkinDocument = messages.GherkinDocument\n\nconst pickleStepTypeFromKeyword: { [key in messages.StepKeywordType]: messages.PickleStepType } = {\n    [messages.StepKeywordType.UNKNOWN]: messages.PickleStepType.UNKNOWN,\n    [messages.StepKeywordType.CONTEXT]: messages.PickleStepType.CONTEXT,\n    [messages.StepKeywordType.ACTION]: messages.PickleStepType.ACTION,\n    [messages.StepKeywordType.OUTCOME]: messages.PickleStepType.OUTCOME,\n    [messages.StepKeywordType.CONJUNCTION]: null\n}\n\nexport default function compile(\n  gherkinDocument: IGherkinDocument,\n  uri: string,\n  newId: messages.IdGenerator.NewId\n): readonly messages.Pickle[] {\n  const pickles: messages.Pickle[] = []\n\n  if (gherkinDocument.feature == null) {\n    return pickles\n  }\n\n  const feature = gherkinDocument.feature\n  const language = feature.language\n  const featureTags = feature.tags\n  let featureBackgroundSteps: messages.Step[] = []\n\n  feature.children.forEach((stepsContainer) => {\n    if (stepsContainer.background) {\n      featureBackgroundSteps = [].concat(stepsContainer.background.steps)\n    } else if (stepsContainer.rule) {\n      compileRule(\n        featureTags,\n        featureBackgroundSteps,\n        stepsContainer.rule,\n        language,\n        pickles,\n        uri,\n        newId\n      )\n    } else if (stepsContainer.scenario.examples.length === 0) {\n      compileScenario(\n        featureTags,\n        featureBackgroundSteps,\n        stepsContainer.scenario,\n        language,\n        pickles,\n        uri,\n        newId\n      )\n    } else {\n      compileScenarioOutline(\n        featureTags,\n        featureBackgroundSteps,\n        stepsContainer.scenario,\n        language,\n        pickles,\n        uri,\n        newId\n      )\n    }\n  })\n  return pickles\n}\n\nfunction compileRule(\n  featureTags: readonly messages.Tag[],\n  featureBackgroundSteps: readonly messages.Step[],\n  rule: messages.Rule,\n  language: string,\n  pickles: messages.Pickle[],\n  uri: string,\n  newId: messages.IdGenerator.NewId\n) {\n  let ruleBackgroundSteps = [].concat(featureBackgroundSteps)\n\n  const tags = [].concat(featureTags).concat(rule.tags)\n\n  rule.children.forEach((stepsContainer) => {\n    if (stepsContainer.background) {\n      ruleBackgroundSteps = ruleBackgroundSteps.concat(stepsContainer.background.steps)\n    } else if (stepsContainer.scenario.examples.length === 0) {\n      compileScenario(\n        tags,\n        ruleBackgroundSteps,\n        stepsContainer.scenario,\n        language,\n        pickles,\n        uri,\n        newId\n      )\n    } else {\n      compileScenarioOutline(\n        tags,\n        ruleBackgroundSteps,\n        stepsContainer.scenario,\n        language,\n        pickles,\n        uri,\n        newId\n      )\n    }\n  })\n}\n\nfunction compileScenario(\n  inheritedTags: readonly messages.Tag[],\n  backgroundSteps: readonly messages.Step[],\n  scenario: messages.Scenario,\n  language: string,\n  pickles: messages.Pickle[],\n  uri: string,\n  newId: messages.IdGenerator.NewId\n) {\n  let lastKeywordType = messages.StepKeywordType.UNKNOWN\n  const steps = [] as messages.PickleStep[]\n\n  if (scenario.steps.length !== 0) {\n    backgroundSteps.forEach((step) => {\n       lastKeywordType = (step.keywordType === messages.StepKeywordType.CONJUNCTION) ?\n         lastKeywordType : step.keywordType\n       steps.push(pickleStep(step, [], null, newId, lastKeywordType))\n    })\n  }\n\n  const tags = [].concat(inheritedTags).concat(scenario.tags)\n\n  scenario.steps.forEach((step) => {\n    lastKeywordType = (step.keywordType === messages.StepKeywordType.CONJUNCTION) ?\n      lastKeywordType : step.keywordType\n     steps.push(pickleStep(step, [], null, newId, lastKeywordType))\n  })\n\n  const pickle: messages.Pickle = {\n    id: newId(),\n    uri,\n    astNodeIds: [scenario.id],\n    tags: pickleTags(tags),\n    name: scenario.name,\n    language,\n    steps,\n  }\n  pickles.push(pickle)\n}\n\nfunction compileScenarioOutline(\n  inheritedTags: readonly messages.Tag[],\n  backgroundSteps: readonly messages.Step[],\n  scenario: messages.Scenario,\n  language: string,\n  pickles: messages.Pickle[],\n  uri: string,\n  newId: messages.IdGenerator.NewId\n) {\n  scenario.examples\n    .filter((e) => e.tableHeader)\n    .forEach((examples) => {\n      const variableCells = examples.tableHeader.cells\n      examples.tableBody.forEach((valuesRow) => {\n        let lastKeywordType = messages.StepKeywordType.UNKNOWN\n        const steps = [] as messages.PickleStep[]\n        if (scenario.steps.length !== 0) {\n          backgroundSteps.forEach((step) => {\n            lastKeywordType = (step.keywordType === messages.StepKeywordType.CONJUNCTION) ?\n              lastKeywordType : step.keywordType\n            steps.push(pickleStep(step, [], null, newId, lastKeywordType))\n          })\n        }\n\n        scenario.steps.forEach((scenarioOutlineStep) => {\n          lastKeywordType = (scenarioOutlineStep.keywordType === messages.StepKeywordType.CONJUNCTION) ?\n            lastKeywordType : scenarioOutlineStep.keywordType\n          const step = pickleStep(scenarioOutlineStep, variableCells, valuesRow, newId, lastKeywordType)\n          steps.push(step)\n        })\n\n        const id = newId()\n        const tags = pickleTags(\n          [].concat(inheritedTags).concat(scenario.tags).concat(examples.tags)\n        )\n\n        pickles.push({\n          id,\n          uri,\n          astNodeIds: [scenario.id, valuesRow.id],\n          name: interpolate(scenario.name, variableCells, valuesRow.cells),\n          language,\n          steps,\n          tags,\n        })\n      })\n    })\n}\n\nfunction createPickleArguments(\n  step: messages.Step,\n  variableCells: readonly messages.TableCell[],\n  valueCells: readonly messages.TableCell[]\n): messages.PickleStepArgument | undefined {\n  if (step.dataTable) {\n    const argument = step.dataTable\n    const table: messages.PickleTable = {\n      rows: argument.rows.map((row) => {\n        return {\n          cells: row.cells.map((cell) => {\n            return {\n              value: interpolate(cell.value, variableCells, valueCells),\n            }\n          }),\n        }\n      }),\n    }\n    return { dataTable: table }\n  } else if (step.docString) {\n    const argument = step.docString\n    const docString: messages.PickleDocString = {\n      content: interpolate(argument.content, variableCells, valueCells),\n    }\n    if (argument.mediaType) {\n      docString.mediaType = interpolate(argument.mediaType, variableCells, valueCells)\n    }\n    return { docString }\n  }\n}\n\nfunction interpolate(\n  name: string,\n  variableCells: readonly messages.TableCell[],\n  valueCells: readonly messages.TableCell[]\n) {\n  variableCells.forEach((variableCell, n) => {\n    const valueCell = valueCells[n]\n    const valuePattern = '<' + variableCell.value + '>'\n    const escapedPattern = valuePattern.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')\n    const regexp = new RegExp(escapedPattern, 'g')\n    // JS Specific - dollar sign needs to be escaped with another dollar sign\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/replace#Specifying_a_string_as_a_parameter\n    const replacement = valueCell.value.replace(new RegExp('\\\\$', 'g'), '$$$$')\n    name = name.replace(regexp, replacement)\n  })\n  return name\n}\n\nfunction pickleStep(\n  step: messages.Step,\n  variableCells: readonly messages.TableCell[],\n  valuesRow: messages.TableRow | null,\n  newId: messages.IdGenerator.NewId,\n  keywordType: messages.StepKeywordType\n): messages.PickleStep {\n  const astNodeIds = [step.id]\n  if (valuesRow) {\n    astNodeIds.push(valuesRow.id)\n  }\n  const valueCells = valuesRow ? valuesRow.cells : []\n\n  return {\n    id: newId(),\n    text: interpolate(step.text, variableCells, valueCells),\n    type: pickleStepTypeFromKeyword[keywordType],\n    argument: createPickleArguments(step, variableCells, valueCells),\n    astNodeIds: astNodeIds,\n  }\n}\n\nfunction pickleTags(tags: messages.Tag[]): readonly messages.PickleTag[] {\n  return tags.map(pickleTag)\n}\n\nfunction pickleTag(tag: messages.Tag): messages.PickleTag {\n  return {\n    name: tag.name,\n    astNodeId: tag.id,\n  }\n}\n"]}